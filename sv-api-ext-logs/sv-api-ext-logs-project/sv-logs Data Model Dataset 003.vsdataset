<?xml version="1.0" encoding="utf-8"?>
<ds version="5.6.0.1533" id="bf08f1bf-43be-43c6-9163-27c4536e6b56" vsId="4f43d4ae-94a8-41e5-9461-62eeeb1c772f" dmId="e6b936ad-449d-4814-87ad-ccf57dc23bdc" sorId="17412983-c088-4a21-8707-adec6ea8e5a8" hc="-726602593" xmlns="http://hp.com/SOAQ/ServiceVirtualization/2010/">
  <sc id="eecc0546-e74f-42c0-9851-80469ba913dd" ts="2023-06-08T11:16:31.3332609Z" ri="1" rc="1" rr="false">
    <ntId p="4:1">6d75851d-bb78-4ec1-a4bb-04d5057268db</ntId>
    <ntId p="7:1">empty</ntId>
    <s p="9:1">200</s>
    <s p="11:1">text/plain</s>
    <b p="14:1"></b>
    <s p="15:1"></s>
    <s p="16:1">text/plain</s>
    <s p="22:1">GET</s>
  </sc>
</ds>